$(document).ready(() => {
    const userId = Number($('#currentUserId').val());

    if (!userId) {
        console.warn("User ID –Ω–µ –∑–∞–¥–∞–Ω ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è.");
    } else {
        function showToast(message) {
            const toastEl = document.getElementById('notif-toast');
            const toastText = document.getElementById('notif-text');

            if (!toastEl || !toastText) {
                console.error("–≠–ª–µ–º–µ–Ω—Ç—ã toast –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM.");
                return;
            }

            toastText.innerText = message;

            const toast = new bootstrap.Toast(toastEl);
            toast.show();
        }

        function fetchNotifications() {
            fetch(`/api/v1/notifications?userId=${userId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.length > 0) {
                        const latest = data[0];
                        const sender = latest.sender || "–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å";
                        const message = latest.message || "–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ";
                        showToast(`üì¨ ${sender}: ${message}`);
                    }
                })
                .catch(error => {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", error);
                });
        }

        fetchNotifications();
    }
});